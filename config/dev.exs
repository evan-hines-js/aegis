import Config
config :ash, policies: [show_policy_breakdowns?: true]

# Configure your database
config :aegis, Aegis.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "aegis_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :aegis, AegisWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: String.to_integer(System.get_env("PORT") || "4000")],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "qG7DBDJUyQnADLcwHsOdXAN/mNBaJFUMW0dUS4cEMeQiafCcQZ4cMbGRxl+MI0fG",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:aegis, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:aegis, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :aegis, AegisWeb.Endpoint,
  live_reload: [
    web_console_logger: true,
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/aegis_web/(?:controllers|live|components|router)/?.*\.(ex|heex)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :aegis, dev_routes: true, token_signing_secret: "RlIEMqMcVOUSETKETVILUTgnY7dgwU9L"

# Do not include metadata nor timestamps in development logs
config :logger, :default_formatter, format: "[$level] $message\n"
config :logger, level: :debug
# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  # Include debug annotations and locations in rendered markup.
  # Changing this configuration will require mix clean and a full recompile.
  debug_heex_annotations: true,
  debug_attributes: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false

# Development overrides for smart pagination
config :aegis, :smart_pagination,
  # Enable more verbose analytics in development
  analytics_enabled: true,
  # Shorter retention for development
  analytics_retention_days: 7,
  # More aggressive recency decay for testing
  recency_decay_hours: 0.5

# libcluster configuration for distributed testing
# Uses Gossip strategy with multicast for local node discovery
config :libcluster,
  topologies: [
    aegis_cluster: [
      strategy: Cluster.Strategy.Gossip,
      config: [
        # Port for gossip communication
        port: 45892,
        # Multicast address for node discovery
        if_addr: {0, 0, 0, 0},
        # Multicast group
        multicast_addr: {230, 1, 1, 251},
        # How often to broadcast (milliseconds)
        broadcast_period: 2_000,
        # Consider node down after this many missed heartbeats
        secret: "aegis_cluster_secret"
      ]
    ]
  ]
